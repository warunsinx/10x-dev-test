/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { TenXBank, TenXBankInterface } from "../../contracts/TenXBank";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "bankToken_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "AccountCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "oldFee",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "FeeChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FeeCollected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "from",
        type: "string",
      },
      {
        indexed: true,
        internalType: "string",
        name: "to",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokenWithdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "accounts",
    outputs: [
      {
        internalType: "bool",
        name: "exists",
        type: "bool",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "bankToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "collectFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "createAccount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeDecimals",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "getOwnerAccounts",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "newFee",
        type: "uint256",
      },
    ],
    name: "setFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shifter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "from",
        type: "string",
      },
      {
        internalType: "string",
        name: "to",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "from",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "to",
        type: "string[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "transferBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a0604052606460005534801561001557600080fd5b50604051611758380380611758833981016040819052610034916100a0565b61003d3361004e565b6001600160a01b03166080526100d0565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156100b257600080fd5b81516001600160a01b03811681146100c957600080fd5b9392505050565b608051611658610100600039600081816101e6015281816105600152818161066d015261072e01526116586000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80638da5cb5b11610097578063bb59d2dd11610066578063bb59d2dd14610277578063cc0f17861461028a578063ddca3f4314610292578063f2fde38b1461029b57600080fd5b80638da5cb5b146102205780638e27d719146102315780639b80b05014610244578063ab0ea3b51461025757600080fd5b8063707ed02b116100d3578063707ed02b146101b0578063715018a6146101c65780637ff7b0d2146101ce5780638670872b146101e157600080fd5b8063298daf5b14610105578063303904141461011a57806330b39a621461018a57806369fe0e2d1461019d575b600080fd5b610118610113366004611000565b6102ae565b005b610160610128366004611000565b80516020818301810180516002825292820191909301209152805460019091015460ff82169161010090046001600160a01b03169083565b6040805193151584526001600160a01b039092166020840152908201526060015b60405180910390f35b61011861019836600461103d565b610429565b6101186101ab366004611082565b610629565b6101b861063d565b604051908152602001610181565b61011861064c565b6101186101dc3660046110b7565b610660565b6102087f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610181565b6001546001600160a01b0316610208565b61011861023f36600461103d565b610697565b6101186102523660046110e3565b61082e565b61026a610265366004611150565b61083e565b604051610181919061119e565b6101186102853660046112a7565b61092d565b6101b8600481565b6101b860005481565b6101186102a9366004611150565b6109df565b6102b781610a55565b156103155760405162461bcd60e51b815260206004820152602360248201527f4163636f756e74206e616d652068617320616c7265616479206265656e20746160448201526235b2b760e91b60648201526084015b60405180910390fd5b6001600282604051610327919061139e565b908152604051908190036020018120805492151560ff1990931692909217909155339060029061035890849061139e565b908152602001604051809103902060000160016101000a8154816001600160a01b0302191690836001600160a01b03160217905550600060028260405161039f919061139e565b90815260408051602092819003830190206001908101939093553360009081526003835290812080549384018155815281902083516103e5939190910191840190610eb0565b5060405133906103f690839061139e565b604051908190038120907f10799746f94b291f15fd923ced2220d835d5353b82f2baf3f0d528956e71fd3190600090a350565b8161043381610a55565b61044f5760405162461bcd60e51b815260040161030c906113ba565b60028160405161045f919061139e565b9081526040516020918190039190910190205461010090046001600160a01b0316331461049e5760405162461bcd60e51b815260040161030c906113e5565b816002846040516104af919061139e565b9081526020016040518091039020600101541161050e5760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e74206163636f756e742062616c616e636500000000604482015260640161030c565b8160028460405161051f919061139e565b9081526020016040518091039020600101600082825461053f9190611432565b909155505060405163a9059cbb60e01b8152336004820152602481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb90604401602060405180830381600087803b1580156105ac57600080fd5b505af11580156105c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e49190611449565b5081836040516105f4919061139e565b604051908190038120907fdcf4ce6b0d464ef3f862dc205a10010e2adc8fbbbdf9202fc1d864da6ab4910290600090a3505050565b610631610a80565b61063a81610ada565b50565b6106496004600a611551565b81565b610654610a80565b61065e6000610b11565b565b610668610a80565b6106937f00000000000000000000000000000000000000000000000000000000000000008383610b63565b5050565b816106a181610a55565b6106bd5760405162461bcd60e51b815260040161030c906113ba565b6002816040516106cd919061139e565b9081526040516020918190039190910190205461010090046001600160a01b0316331461070c5760405162461bcd60e51b815260040161030c906113e5565b6040516323b872dd60e01b8152336004820152306024820152604481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd90606401602060405180830381600087803b15801561077a57600080fd5b505af115801561078e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b29190611449565b50816002846040516107c4919061139e565b908152602001604051809103902060010160008282546107e4919061155d565b909155505060405182906107f990859061139e565b604051908190038120907f078d8c4c3992828a28659e747802c2ffdde91a45c081889c83346dac69c4963790600090a3505050565b610839838383610c21565b505050565b6001600160a01b0381166000908152600360209081526040808320805482518185028101850190935280835260609492939192909184015b8282101561092257838290600052602060002001805461089590611575565b80601f01602080910402602001604051908101604052809291908181526020018280546108c190611575565b801561090e5780601f106108e35761010080835404028352916020019161090e565b820191906000526020600020905b8154815290600101906020018083116108f157829003601f168201915b505050505081526020019060010190610876565b505050509050919050565b805182511461097e5760405162461bcd60e51b815260206004820152601f60248201527f52656365697665727320616e6420616d6f756e7473206d6973736d6174636800604482015260640161030c565b60005b82518110156109d9576109c7848483815181106109a0576109a06115b0565b60200260200101518484815181106109ba576109ba6115b0565b6020026020010151610c21565b806109d1816115c6565b915050610981565b50505050565b6109e7610a80565b6001600160a01b038116610a4c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161030c565b61063a81610b11565b6000600282604051610a67919061139e565b9081526040519081900360200190205460ff1692915050565b6001546001600160a01b0316331461065e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161030c565b600080548282556040519091839183917f5fc463da23c1b063e66f9e352006a7fbe8db7223c455dc429e881a2dfe2f94f191a35050565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60405163a9059cbb60e01b81526001600160a01b0382811660048301526024820184905284169063a9059cbb90604401602060405180830381600087803b158015610bad57600080fd5b505af1158015610bc1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be59190611449565b5060405182906001600160a01b038316907f06c5efeff5c320943d265dc4e5f1af95ad523555ce0c1957e367dda5514572df90600090a3505050565b82610c2b81610a55565b610c475760405162461bcd60e51b815260040161030c906113ba565b600281604051610c57919061139e565b9081526040516020918190039190910190205461010090046001600160a01b03163314610c965760405162461bcd60e51b815260040161030c906113e5565b610c9f83610a55565b610ceb5760405162461bcd60e51b815260206004820152601a60248201527f5265636569766572206163636f756e74206e6f7420666f756e64000000000000604482015260640161030c565b81600285604051610cfc919061139e565b90815260200160405180910390206001015411610d5b5760405162461bcd60e51b815260206004820152601c60248201527f496e73756666696369656e74206163636f756e742062616c616e636500000000604482015260640161030c565b6040518290600290610d6e90869061139e565b9081526040516020918190039190910190205461010090046001600160a01b03163314610da5576000610da084610e70565b509150505b80600286604051610db6919061139e565b90815260200160405180910390206001016000828254610dd69190611432565b9250508190555080600285604051610dee919061139e565b90815260200160405180910390206001016000828254610e0e919061155d565b90915550506040518390610e2390869061139e565b604051809103902086604051610e39919061139e565b604051908190038120907fce486dbd8dda2770c202398b3921c432157b3d0bd51c527cd7759b85045129dc90600090a45050505050565b60008080610e806004600a611551565b600054610e8d90866115e1565b610e979190611600565b90506000610ea58286611432565b959194509092505050565b828054610ebc90611575565b90600052602060002090601f016020900481019282610ede5760008555610f24565b82601f10610ef757805160ff1916838001178555610f24565b82800160010185558215610f24579182015b82811115610f24578251825591602001919060010190610f09565b50610f30929150610f34565b5090565b5b80821115610f305760008155600101610f35565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610f8857610f88610f49565b604052919050565b600082601f830112610fa157600080fd5b813567ffffffffffffffff811115610fbb57610fbb610f49565b610fce601f8201601f1916602001610f5f565b818152846020838601011115610fe357600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561101257600080fd5b813567ffffffffffffffff81111561102957600080fd5b61103584828501610f90565b949350505050565b6000806040838503121561105057600080fd5b823567ffffffffffffffff81111561106757600080fd5b61107385828601610f90565b95602094909401359450505050565b60006020828403121561109457600080fd5b5035919050565b80356001600160a01b03811681146110b257600080fd5b919050565b600080604083850312156110ca57600080fd5b823591506110da6020840161109b565b90509250929050565b6000806000606084860312156110f857600080fd5b833567ffffffffffffffff8082111561111057600080fd5b61111c87838801610f90565b9450602086013591508082111561113257600080fd5b5061113f86828701610f90565b925050604084013590509250925092565b60006020828403121561116257600080fd5b61116b8261109b565b9392505050565b60005b8381101561118d578181015183820152602001611175565b838111156109d95750506000910152565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561120b57878503603f19018452815180518087526111ec818989018a8501611172565b601f01601f1916959095018601945092850192908501906001016111c5565b5092979650505050505050565b600067ffffffffffffffff82111561123257611232610f49565b5060051b60200190565b600082601f83011261124d57600080fd5b8135602061126261125d83611218565b610f5f565b82815260059290921b8401810191818101908684111561128157600080fd5b8286015b8481101561129c5780358352918301918301611285565b509695505050505050565b6000806000606084860312156112bc57600080fd5b833567ffffffffffffffff808211156112d457600080fd5b6112e087838801610f90565b94506020915081860135818111156112f757600080fd5b8601601f8101881361130857600080fd5b803561131661125d82611218565b81815260059190911b8201840190848101908a83111561133557600080fd5b8584015b8381101561136d578035868111156113515760008081fd5b61135f8d8983890101610f90565b845250918601918601611339565b509650505050604086013591508082111561138757600080fd5b506113948682870161123c565b9150509250925092565b600082516113b0818460208701611172565b9190910192915050565b6020808252601190820152701058d8dbdd5b9d081b9bdd08199bdd5b99607a1b604082015260600190565b6020808252601c908201527f4163636f756e74206f776e657220646f6573206e6f74206d6174636800000000604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000828210156114445761144461141c565b500390565b60006020828403121561145b57600080fd5b8151801515811461116b57600080fd5b600181815b808511156114a657816000190482111561148c5761148c61141c565b8085161561149957918102915b93841c9390800290611470565b509250929050565b6000826114bd5750600161154b565b816114ca5750600061154b565b81600181146114e057600281146114ea57611506565b600191505061154b565b60ff8411156114fb576114fb61141c565b50506001821b61154b565b5060208310610133831016604e8410600b8410161715611529575081810a61154b565b611533838361146b565b80600019048211156115475761154761141c565b0290505b92915050565b600061116b83836114ae565b600082198211156115705761157061141c565b500190565b600181811c9082168061158957607f821691505b602082108114156115aa57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b60006000198214156115da576115da61141c565b5060010190565b60008160001904831182151516156115fb576115fb61141c565b500290565b60008261161d57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220c6cce410690e018bfa3e6c60e0ff038f5c913f91e88b37311258c04ead3f98ad64736f6c63430008090033";

type TenXBankConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TenXBankConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TenXBank__factory extends ContractFactory {
  constructor(...args: TenXBankConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    bankToken_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TenXBank> {
    return super.deploy(bankToken_, overrides || {}) as Promise<TenXBank>;
  }
  override getDeployTransaction(
    bankToken_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(bankToken_, overrides || {});
  }
  override attach(address: string): TenXBank {
    return super.attach(address) as TenXBank;
  }
  override connect(signer: Signer): TenXBank__factory {
    return super.connect(signer) as TenXBank__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TenXBankInterface {
    return new utils.Interface(_abi) as TenXBankInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TenXBank {
    return new Contract(address, _abi, signerOrProvider) as TenXBank;
  }
}
